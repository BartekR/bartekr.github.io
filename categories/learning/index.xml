<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learning on BartekR</title>
    <link>http://bartekr.github.io/categories/learning/</link>
    <description>Recent content in Learning on BartekR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 07 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="http://bartekr.github.io/categories/learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Draw the SSIS Package using SVG - part III</title>
      <link>http://bartekr.github.io/2019/08/07/draw-the-ssis-package-using-svg-part-iii/</link>
      <pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://bartekr.github.io/2019/08/07/draw-the-ssis-package-using-svg-part-iii/</guid>
      <description>In the third part of a series, I focus on drawing the constraints&#39; descriptions and the colours. And also a bit of PowerShell for automation.
Automating the layout extraction Previously I prepared the file with a layout by hand - I copied the CDATA content of the/DTS:Executable/DTS:DesignTimeProperties element to the XML file and saved it. It&amp;rsquo;s a tedious task, so I wrote a PowerShell script New-Diagram.ps1. It has two paths as the parameters - the package to analyse, and the output file.</description>
    </item>
    
    <item>
      <title>Draw the SSIS Package using SVG - part II</title>
      <link>http://bartekr.github.io/2019/07/16/draw-the-ssis-package-using-svg-part-ii/</link>
      <pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://bartekr.github.io/2019/07/16/draw-the-ssis-package-using-svg-part-ii/</guid>
      <description>The post is a second part of the series. In the previous one, I created an SVG image of the simple SSIS package, but when I tried to draw something advanced (upper image below) I got something far from expected (lower image below). This time I&amp;rsquo;ll fix it.
 
The sequence problem The main issue is with the alignment of the elements in the Sequence object (no matter if it&amp;rsquo;s the default one, the ForEachLoop or the ForLoop).</description>
    </item>
    
    <item>
      <title>Draw the SSIS package using SVG - part I</title>
      <link>http://bartekr.github.io/2019/07/08/draw-the-ssis-package-using-svg-part-i/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://bartekr.github.io/2019/07/08/draw-the-ssis-package-using-svg-part-i/</guid>
      <description>For one of my projects, I need to draw the content of an SSIS package. It should not be a big problem, as the file contains all the required information. If you need to do something similar - I write a series of posts on how to achieve it using SVG, XSLT transformations and a bit of PowerShell (and maybe something more along the way). All the code is available on GitHub.</description>
    </item>
    
    <item>
      <title>Learning something new: getting information from SSIS packages with PowerShell</title>
      <link>http://bartekr.github.io/2017/07/26/learning-something-new-getting-information-from-ssis-packages-with-powershell/</link>
      <pubDate>Wed, 26 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://bartekr.github.io/2017/07/26/learning-something-new-getting-information-from-ssis-packages-with-powershell/</guid>
      <description>In the series of learning something new, I started with analysing of the SSIS package XML. I know what I want to extract, so let the fun begin. I will use Powershell to get the data from the .dtsx files and save it to the database. The whole script is presented below with comments. For more information scroll down.
# I will use Out-DbaDataTable and Write-DbaDataTable from dbatools, so import it Import-Module dbatools # find recursively all Executable nodes in .</description>
    </item>
    
    <item>
      <title>Learning something new: connections in SSIS package</title>
      <link>http://bartekr.github.io/2017/06/25/learning-something-new-connections-in-ssis-package/</link>
      <pubDate>Sun, 25 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://bartekr.github.io/2017/06/25/learning-something-new-connections-in-ssis-package/</guid>
      <description>Starting to learn something new - first step. Let&amp;rsquo;s analyse the code of SSIS package. How does it store the information about the element connections? How can I get that data as graph&amp;rsquo;s edges and nodes? Step by step - building the packages from empty one to more complex I will find how they are stored.
To achieve this I will prepare the new SSIS Project and call it SSIS_Graph. It will get new packages each time I will want to check something new.</description>
    </item>
    
    <item>
      <title>Learn something new - Power BI &#43; SSIS &#43; SQL Server 2017 Graphs</title>
      <link>http://bartekr.github.io/2017/06/14/learn-something-new-power-bi-ssis-sql-server-2017-graphs/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://bartekr.github.io/2017/06/14/learn-something-new-power-bi-ssis-sql-server-2017-graphs/</guid>
      <description>Recently I attended the AppDev PASS Virtual Group webinar about graphs in SQL Server 2017. When the demo about car manufacturing structure appeared in Power BI (49th minute of the recording - using Force-directed graph plugin) the idea struck: how about visualising SSIS packages&#39; relations using graphs and Power BI?
Maybe it won&amp;rsquo;t work, maybe there are limitations I&amp;rsquo;m not aware right now, but I have to try. This post will serve as the gateway to the series of post where I will write about my findings on graphs in SQL Server, their visualisations, querying, structure defining, Power BI embracement and - of course - SSIS.</description>
    </item>
    
  </channel>
</rss>
