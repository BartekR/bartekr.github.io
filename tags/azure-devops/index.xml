<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Azure DevOps on BartekR</title>
        <link>https://blog.bartekr.net/tags/azure-devops/</link>
        <description>Recent content in Azure DevOps on BartekR</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-gb</language>
        <lastBuildDate>Thu, 24 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.bartekr.net/tags/azure-devops/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Using the system OAuth token in Azure DevOps</title>
        <link>https://blog.bartekr.net/2020/09/24/using-the-system-oauth-token-in-azure-devops/</link>
        <pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bartekr.net/2020/09/24/using-the-system-oauth-token-in-azure-devops/</guid>
        <description>&lt;img src="https://blog.bartekr.net/2020/09/24/using-the-system-oauth-token-in-azure-devops/images/203Error.png" alt="Featured image of post Using the system OAuth token in Azure DevOps" /&gt;&lt;p&gt;One of the new YAML pipeline steps I prepared recently involved interaction with work items. I wanted to add the comments to the task (with the task ID extracted from some file). So, I created a PowerShell step that was executing &lt;code&gt;Invoke-WebRequest&lt;/code&gt; (with &lt;code&gt;try/catch&lt;/code&gt; logic, obviously), the process finished successfully, but nothing happened. I mean - the comments were not there. Uhmmmm, why?! The log analysis gave me a slight hint about what was wrong (as seen in the post header picture):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;StatusCode : 203
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;StatusDescription : NonAuthoritativeInformation
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The problem began because I wanted to adjust the code from the other pipeline that would fit my needs, but it didn&amp;rsquo;t want to work in my project. I googled for the answers, fiddled with tokens, authorization headers, setting pipeline options and variables - nothing helped. I got even more errors and problems. I had to take one step back to go two steps forward.&lt;/p&gt;
&lt;p&gt;To better understand the problem I created a two brand new separate Azure DevOps projects and built two pipelines: one using the classic interface, the second using YAML. Also, I made the testing easier and I just read all the comments.&lt;/p&gt;
&lt;p&gt;Why two projects? To test how it works when I call to the task in the same project and the task outside the project. The initial problem I wanted to solve was running the build pipeline in project X and add the comments to the task in the project Y. But if I wanted to understand the mechanics from the ground up and find the solution I had to begin with smaller steps.&lt;/p&gt;
&lt;h2 id=&#34;so-build-me-a-classic-pipeline&#34;&gt;So, build me a classic pipeline
&lt;/h2&gt;&lt;p&gt;My setup is just one PowerShell script calling the task address using &lt;code&gt;Invoke-WebRequest&lt;/code&gt; (or &lt;code&gt;Invoke-RestMethod&lt;/code&gt;). The script uses two parameters - project name and task id, as I will test two cases and don&amp;rsquo;t want to prepare hardcoded values for both tests.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;param&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$project&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;CrossProjectTest01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$workitem&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;26&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$uri&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://dev.azure.com/bartekr/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$project&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/_apis/wit/workItems/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$workitem&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/comments?api-version=6.0-preview.3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Write-Host&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Uri &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$uri&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Write-Host&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;AccessToken: &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$env:SYSTEM_ACCESSTOKEN&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Invoke-WebRequest&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;\`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;-Uri&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$uri&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;\`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;-Method&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;\`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;-Headers&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Authorization&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bearer &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$env:SYSTEM_ACCESSTOKEN&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;\`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;-UseBasicParsing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$result&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The most important part of the code is &lt;code&gt;-Headers @{ Authorization = &amp;quot;Bearer $env:SYSTEM_ACCESSTOKEN&amp;quot; }&lt;/code&gt;. It involves &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&amp;amp;tabs=classic#systemaccesstoken&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;a special system OAuth token&lt;/a&gt; available during the job execution. We could use a PAT (Personal Access Token) with required privileges to do the same, but why create one if we have already one at hand? Also pay attention that there is a &lt;strong&gt;Bearer&lt;/strong&gt; keyword, not a Basic auth.&lt;/p&gt;
&lt;p&gt;Using a default setup (create an empty classic pipeline, add steps) I get the output as described at the beginning of the post:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Uri https://dev.azure.com/bartekr/CrossProjectTest01/_apis/wit/workItems/26/comments?api-version=6.0-preview.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AccessToken:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;StatusCode : 203
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;StatusDescription : Non-Authoritative Information
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The access token has no value - that explains why there is no access (203 code). To fix it - edit the pipeline, go to &amp;ldquo;&lt;em&gt;Run on agent&lt;/em&gt;&amp;rdquo; job settings, scroll down and check the &amp;ldquo;&lt;em&gt;Allow scripts to access the OAuth token&lt;/em&gt;&amp;rdquo; option.&lt;/p&gt;
&lt;p&gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/AzureDevOps_SystemAccessToken_ClassicPipeline.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Allow scripts to access the OAuth token&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Now the job will finish as expected - the &lt;code&gt;System.AccessToken&lt;/code&gt; is visible to the process.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Uri https://dev.azure.com/bartekr/CrossProjectTest01/_apis/wit/workItems/26/comments?api-version=6.0-preview.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AccessToken: ***
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;StatusCode        : 200
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;StatusDescription : OK
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content           : {&lt;span class=&#34;s2&#34;&gt;&amp;#34;totalCount&amp;#34;&lt;/span&gt;:1,&lt;span class=&#34;s2&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;:1,&lt;span class=&#34;s2&#34;&gt;&amp;#34;comments&amp;#34;&lt;/span&gt;:[{&lt;span class=&#34;s2&#34;&gt;&amp;#34;workItemId&amp;#34;&lt;/span&gt;:26,&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;:2806326,&lt;span class=&#34;s2&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;:1,&lt;span class=&#34;s2&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This worked when the pipeline and the work item were in the same project. When I set the parameters for the PowerShell script to call the task from another project (CrossProjectTest02) I got the error &amp;ldquo;&lt;em&gt;project with id (&amp;hellip;) does not exist, or you do not have permission to access it&lt;/em&gt;&amp;rdquo;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Uri https://dev.azure.com/bartekr/CrossProjectTest02/_apis/wit/workItems/27/comments?api-version=6.0-preview.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AccessToken: ***
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Invoke-WebRequest : {&lt;span class=&#34;s2&#34;&gt;&amp;#34;$id&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;innerException&amp;#34;&lt;/span&gt;:null,&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;VS800075: The project with id&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#39;vstfs:///Classification/TeamProject/8634ba98-f13c-46c4-a30c-eedc6dbeb32b&amp;#39; does not exist, or you do not have
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;permission to access it.&lt;span class=&#34;s2&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;typeName&lt;span class=&#34;s2&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt;Microsoft.TeamFoundation.Core.WebApi.ProjectDoesNotExistException,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Microsoft.TeamFoundation.Core.WebApi&lt;span class=&#34;s2&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;typeKey&lt;span class=&#34;s2&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt;ProjectDoesNotExistException&lt;span class=&#34;s2&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;errorCode&lt;span class=&#34;s2&#34;&gt;&amp;#34;:0,&amp;#34;&lt;/span&gt;eventId&lt;span class=&#34;s2&#34;&gt;&amp;#34;:3000}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It&amp;rsquo;s because I have &amp;ldquo;&lt;em&gt;Limit job authorization scope to current project&lt;/em&gt;&amp;rdquo; both for release and non-release pipelines set to ON (see: &lt;em&gt;Project settings &amp;gt; Pipelines &amp;gt; Settings&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/AzureDevOps_PipelineSettings.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Pipeline settings&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;After setting the &amp;ldquo;&lt;em&gt;Limit job authorization scope to current project for non-release pipelines&lt;/em&gt;&amp;rdquo; to OFF (in CrossProject01, as there is my pipeline) everything works. It&amp;rsquo;s enough for me to set off for non-release because I&amp;rsquo;m working on the build pipeline.&lt;/p&gt;
&lt;h2 id=&#34;but-but-i-wanted-the-yaml-pipeline-to-work&#34;&gt;But&amp;hellip; but I wanted the &lt;strong&gt;YAML&lt;/strong&gt; pipeline to work
&lt;/h2&gt;&lt;p&gt;The crucial part for the YAML pipeline is: &amp;ldquo;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&amp;amp;tabs=yaml#systemaccesstoken&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;In YAML, you must explicitly map System.AccessToken into the pipeline using a variable.&lt;/a&gt;&amp;rdquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;task&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;PowerShell@2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;displayName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Get comments&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;inputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;filePath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Get-WorkItemComments.ps1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;SYSTEM_ACCESSTOKEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;$(System.AccessToken)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note to self: &lt;strong&gt;ALWAYS&lt;/strong&gt; pay attention to what you write in the &lt;code&gt;env&lt;/code&gt; section of the PowerShell task. &lt;code&gt;$(Aystem.AccesToken)&lt;/code&gt; looks similar but does not work.&lt;/p&gt;
&lt;p&gt;So, the things to remember for the future:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the classic pipeline &amp;ldquo;Allow scripts to access the OAuth token&amp;rdquo;&lt;/li&gt;
&lt;li&gt;In the YAML pipeline map the &lt;code&gt;$(System.AccessToken)&lt;/code&gt; to the variable if you want to use it in the script&lt;/li&gt;
&lt;li&gt;Disable the &amp;ldquo;Limit job authorization scope to current project&amp;rdquo; options to access different projects than the current one&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Adding a new task in TFS (Azure DevOps) using Excel</title>
        <link>https://blog.bartekr.net/2020/05/19/adding-a-new-task-in-tfs-azure-devops-using-excel/</link>
        <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.bartekr.net/2020/05/19/adding-a-new-task-in-tfs-azure-devops-using-excel/</guid>
        <description>&lt;img src="https://blog.bartekr.net/2020/05/19/adding-a-new-task-in-tfs-azure-devops-using-excel/images/AzureDevOps_TeamPlugin.png" alt="Featured image of post Adding a new task in TFS (Azure DevOps) using Excel" /&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://blog.bartekr.net/2020/05/04/adding-a-new-task-in-tfs-using-c/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;In the previous post&lt;/a&gt;, I added the tasks to on-premises TFS using C#. This time I will add similar data using an Excel add-in. I will also learn how to accidentally remove the link from the task to the parent element.&lt;/p&gt;
&lt;p&gt;First things first - if you do not have Azure DevOps Office® Integration 2019 installed (you need it to work with TFS / Azure DevOps from Excel), then go to &lt;a class=&#34;link&#34; href=&#34;https://visualstudio.microsoft.com/downloads/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://visualstudio.microsoft.com/downloads/&lt;/a&gt; and pick it from the &lt;em&gt;Other Tools and Frameworks&lt;/em&gt; section at the bottom of the page. Install, and you should then see the Team plugin in the Excel menu.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;images/AzureDevOps_TeamPlugin.png&#34; &gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/AzureDevOps_TeamPlugin.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Team plugin&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This time I will use my Azure DevOps collection &lt;a class=&#34;link&#34; href=&#34;https://bartekr.visualstudio.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;bartekr&lt;/a&gt; and the &lt;em&gt;AzureDevOps_APITests&lt;/em&gt; project. It uses a &lt;em&gt;Basic&lt;/em&gt; process, but I also tested the process on an &lt;em&gt;Agile&lt;/em&gt; workflow. To add the elements click &lt;em&gt;New List&lt;/em&gt; and connect to the project. If it&amp;rsquo;s the first time you connect to Azure DevOps or TFS you will be prompted to set up the connection to the collection. After you connect pick the &lt;em&gt;Input list&lt;/em&gt; from the options&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;images/ExcelNewList_InputList.png&#34; &gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/ExcelNewList_InputList.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Input list&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now you should see an empty list with information about the connection. The list is ready and you could start filling the columns Title, Work Item Type, State, Reason, Assigned To (ID is read-only).&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;images/ExcelEmptyList.png&#34; &gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/ExcelEmptyList.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Empty list&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But - we want to add not only the tasks but also the connection to a parent element. In this case, tasks should be connected to the Issue (in a &lt;em&gt;Basic&lt;/em&gt; process) or the User Story (an &lt;em&gt;Agile&lt;/em&gt; process). To do it we have to work with the tree, not a flat list (notice: List type: Flat on the right side of the yellow header). Click on the list and you should see an enabled &lt;em&gt;Add Tree Level&lt;/em&gt; button. Click it.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;images/ExcelAddTreeLevel.png&#34; &gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/ExcelAddTreeLevel.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Add tree level&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the &lt;em&gt;Convert to Tree List&lt;/em&gt; select Parent-Child (the default option)&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;images/ExcelConvertToTreeList.png&#34; &gt;![Convert to tree](images/ExcelConvertToTreeList.png#center&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now you should see the columns - &lt;em&gt;Title 1&lt;/em&gt; and &lt;em&gt;Title 2&lt;/em&gt; and the &lt;em&gt;List type: tree&lt;/em&gt;. The first title is for the parent item, the second for the child.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;images/ExcelEmptyWorkitemsTree-1.png&#34; &gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/ExcelEmptyWorkitemsTree-1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Empty work items list&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now - I want to add the new tasks for the Issue 2&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;images/AzureDevOps_BacklogBefore.png&#34; &gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/AzureDevOps_BacklogBefore.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Backlog before&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the &lt;em&gt;Team&lt;/em&gt; toolbar click &lt;em&gt;Get Work Items&lt;/em&gt;, find the &lt;em&gt;Issue 2&lt;/em&gt; in the opened window, select it and click &lt;em&gt;OK&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;images/ExcelFindWorkItem.png&#34; &gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/ExcelFindWorkItem.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Find work item&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The spreadsheet looks like below:&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;images/ExcelIssue2Tree.png&#34; &gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/ExcelIssue2Tree.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Issue 2 as tree&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nothing unusual. Now - in the &lt;em&gt;Title 2&lt;/em&gt; column add new tasks with Work Item Type == &lt;em&gt;Task&lt;/em&gt; and push the button &lt;em&gt;Publish&lt;/em&gt;. And that&amp;rsquo;s it!&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;images/ExcelIssue2Tree_NewWorkItems.png&#34; &gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/ExcelIssue2Tree_NewWorkItems.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Issue 2 - new work items&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In Azure DevOps:&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;images/AzureDevOps_BacklogAfter.png&#34; &gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/AzureDevOps_BacklogAfter.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Backlog after&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If I wanted to fill more columns (like Assigned To, Sprint, Estimated time and so on) - I click &lt;em&gt;Choose columns&lt;/em&gt; button and add them to the list.&lt;/p&gt;
&lt;p&gt;One more small thing for the end. Let&amp;rsquo;s say you have a lot of Tasks with one parent Issue / User Story. &lt;strong&gt;Do not delete them from the list&lt;/strong&gt; &lt;em&gt;&amp;ldquo;because you want to have a clean sheet with just the Issue / User Story&amp;rdquo;&lt;/em&gt;. Deleting the tasks from the list does not delete the tasks (of course), but it removes the Parent-Child hierarchy for the deleted elements.&lt;/p&gt;
&lt;p&gt;If you repeat the steps to get the tasks for Issue 2 and delete them, you will see they lost the connection:&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;images/AzureDevOps_WorkitemDeletedLink.png&#34; &gt;
  
  &lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;images/AzureDevOps_WorkitemDeletedLink.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Work item delete&#34;
	
	
&gt;
  &lt;/p&gt;

&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In short: adding work items to TFS / Azure DevOps using Excel is easy. The trick is &lt;del&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=GwKtszQ8Ejo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;to keep breathing&lt;/a&gt;&lt;/del&gt; to use the &lt;em&gt;Add Tree Level&lt;/em&gt; button.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
